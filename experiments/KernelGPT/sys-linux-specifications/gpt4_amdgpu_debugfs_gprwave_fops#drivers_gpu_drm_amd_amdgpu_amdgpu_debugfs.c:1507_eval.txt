meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/fcntl.h>
include <drivers/gpu/drm/amd/amdgpu/amdgpu_umr.h>

resource fd_amdgpu_gprwave[fd]

openat$KGPT_amdgpu_gprwave(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/dri/#/amdgpu_gprwave"]], flags flags[open_flags], mode const[0]) fd_amdgpu_gprwave

ioctl$KGPT_AMDGPU_DEBUGFS_GPRWAVE_IOC_SET_STATE(fd fd_amdgpu_gprwave, cmd const[AMDGPU_DEBUGFS_GPRWAVE_IOC_SET_STATE], arg ptr[in, amdgpu_debugfs_gprwave_iocdata])

amdgpu_debugfs_gprwave_iocdata {
	gpr_or_wave	int32
	se		int32
	sh		int32
	cu		int32
	wave		int32
	simd		int32
	xcc_id		int32
	gpr		amdgpu_debugfs_gprwave_iocdata_gpr
}

amdgpu_debugfs_gprwave_iocdata_gpr {
	thread		int32
	vpgr_or_sgpr	int32
}
