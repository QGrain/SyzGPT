meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <drivers/bluetooth/hci_uart.h>
include <arch/powerpc/include/uapi/asm/ioctls.h>

resource fd_hci_uart[fd]

syz_open_dev$KGPT_hci_uart(dev ptr[in, string["/dev/pts/#"]], id proc[0, 1], flags flags[open_flags]) fd_hci_uart

ioctl$KGPT_HCIUARTGETPROTO(fd fd_hci_uart, cmd const[HCIUARTGETPROTO], arg ptr[in, array[int8]])
ioctl$KGPT_HCIUARTGETDEVICE(fd fd_hci_uart, cmd const[HCIUARTGETDEVICE], arg ptr[in, array[int8]])
ioctl$KGPT_HCIUARTGETFLAGS(fd fd_hci_uart, cmd const[HCIUARTGETFLAGS], arg ptr[in, array[int8]])
ioctl$KGPT_HCIUARTSETPROTO(fd fd_hci_uart, cmd const[HCIUARTSETPROTO], arg intptr)
ioctl$KGPT_HCIUARTSETFLAGS(fd fd_hci_uart, cmd const[HCIUARTSETFLAGS], arg const[0])
