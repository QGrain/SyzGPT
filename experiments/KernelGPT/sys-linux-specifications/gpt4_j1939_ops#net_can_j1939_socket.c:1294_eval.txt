meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/can/j1939.h>
include <uapi/linux/can.h>

resource sock_j1939[sock]

socket$KGPT_can_j1939(domain const[PF_CAN], type const[SOCK_DGRAM], proto const[CAN_J1939]) sock_j1939

bind$KGPT_j1939_ops(fd sock_j1939, addr ptr[in, sockaddr_can], addrlen len[addr])
connect$KGPT_j1939_ops(fd sock_j1939, addr ptr[in, sockaddr_can], addrlen len[addr])
accept4$KGPT_j1939_ops(fd sock_j1939, peer ptr[out, sockaddr_can, opt], peerlen ptr[inout, len[peer, int32]], flags flags[accept_flags]) sock_j1939
sendto$KGPT_j1939_ops(fd sock_j1939, buf ptr[in, array[int8]], len len[buf], f flags[send_flags], addr ptr[in, sockaddr_can, opt], addrlen len[addr])
recvfrom$KGPT_j1939_ops(fd sock_j1939, buf ptr[out, array[int8]], len len[buf], f flags[recv_flags], addr ptr[in, sockaddr_can, opt], addrlen len[addr])
getsockopt$KGPT_SO_J1939_PROMISC(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_PROMISC], val ptr[out, int32], len ptr[inout, bytesize[val, int32]])
getsockopt$KGPT_SO_J1939_ERRQUEUE(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_ERRQUEUE], val ptr[out, int32], len ptr[inout, bytesize[val, int32]])
getsockopt$KGPT_SO_J1939_SEND_PRIO(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_SEND_PRIO], val ptr[out, int32], len ptr[inout, bytesize[val, int32]])
setsockopt$KGPT_SO_J1939_FILTER(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_FILTER], val ptr[in, array[j1939_filter]], len bytesize[val])
setsockopt$KGPT_SO_J1939_PROMISC(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_PROMISC], val ptr[in, int32], len const[4])
setsockopt$KGPT_SO_J1939_ERRQUEUE(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_ERRQUEUE], val ptr[in, int32], len len[val])
setsockopt$KGPT_SO_J1939_SEND_PRIO(fd sock_j1939, level const[SOL_CAN_J1939], opt const[SO_J1939_SEND_PRIO], val ptr[in, int32], len const[4])

define CAN_J1939	0x0E
