meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/nvme_ioctl.h>

syz_open_dev$KGPT_nvme_dup(dev ptr[in, string["/dev/nvme#"]], id proc[0, 1], flags flags[open_flags]) fd_nvme

ioctl$KGPT_NVME_IOCTL_RESET(fd fd_nvme, cmd const[NVME_IOCTL_RESET], arg ptr[in, array[int8]])
ioctl$KGPT_NVME_IOCTL_SUBSYS_RESET(fd fd_nvme, cmd const[NVME_IOCTL_SUBSYS_RESET], arg ptr[in, array[int8]])
ioctl$KGPT_NVME_IOCTL_RESCAN(fd fd_nvme, cmd const[NVME_IOCTL_RESCAN], arg ptr[in, array[int8]])
ioctl$KGPT_NVME_IOCTL_ADMIN_CMD_0(fd fd_nvme, cmd const[NVME_IOCTL_ADMIN_CMD], arg ptr[in, nvme_passthru_cmd])
ioctl$KGPT_NVME_IOCTL_ADMIN64_CMD_0(fd fd_nvme, cmd const[NVME_IOCTL_ADMIN64_CMD], arg ptr[inout, nvme_passthru_cmd64])
ioctl$KGPT_NVME_IOCTL_IO_CMD_0(fd fd_nvme, cmd const[NVME_IOCTL_IO_CMD], arg ptr[in, nvme_passthru_cmd])
