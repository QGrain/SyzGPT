meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/fcntl.h>
include <uapi/linux/if.h>

resource fd_hdlc_fr[fd]

openat$KGPT_net_tun_dup(fd const[AT_FDCWD], file ptr[in, string["/dev/net/tun"]], flags flags[open_flags], mode const[0]) fd_hdlc_fr

ioctl$KGPT_IF_GET_PROTO_0(fd fd_hdlc_fr, cmd const[IF_GET_PROTO], arg ptr[out, fr_proto])
ioctl$KGPT_IF_PROTO_FR(fd fd_hdlc_fr, cmd const[IF_PROTO_FR], arg ptr[in, fr_proto])
ioctl$KGPT_IF_PROTO_FR_ADD_PVC(fd fd_hdlc_fr, cmd const[IF_PROTO_FR_ADD_PVC], arg ptr[in, fr_proto_pvc])
ioctl$KGPT_IF_PROTO_FR_DEL_PVC(fd fd_hdlc_fr, cmd const[IF_PROTO_FR_DEL_PVC], arg ptr[in, fr_proto_pvc])
ioctl$KGPT_IF_PROTO_FR_ADD_ETH_PVC(fd fd_hdlc_fr, cmd const[IF_PROTO_FR_ADD_ETH_PVC], arg ptr[in, fr_proto_pvc])
ioctl$KGPT_IF_PROTO_FR_DEL_ETH_PVC(fd fd_hdlc_fr, cmd const[IF_PROTO_FR_DEL_ETH_PVC], arg ptr[in, fr_proto_pvc])
