meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/rxrpc.h>

socket$KGPT_rxrpc(domain const[AF_RXRPC], type const[SOCK_DGRAM], proto const[0]) sock_rxrpc

bind$KGPT_rxrpc_rpc_ops(fd sock_rxrpc, addr ptr[in, sockaddr_rxrpc], addrlen len[addr])
connect$KGPT_rxrpc_rpc_ops(fd sock_rxrpc, addr ptr[in, sockaddr_rxrpc], addrlen len[addr])
accept4$KGPT_rxrpc_rpc_ops(fd sock_rxrpc, peer ptr[out, sockaddr_rxrpc, opt], peerlen ptr[inout, len[peer, int32]], flags flags[accept_flags]) sock_rxrpc
sendto$KGPT_rxrpc_rpc_ops(fd sock_rxrpc, buf ptr[in, array[int8]], len len[buf], f flags[send_flags], addr ptr[in, sockaddr_rxrpc, opt], addrlen len[addr])
recvfrom$KGPT_rxrpc_rpc_ops(fd sock_rxrpc, buf ptr[out, array[int8]], len len[buf], f flags[recv_flags], addr ptr[in, sockaddr_rxrpc, opt], addrlen len[addr])
getsockopt$KGPT_RXRPC_SUPPORTED_CMSG(fd sock_rxrpc, level const[SOL_RXRPC], opt const[RXRPC_SUPPORTED_CMSG], val ptr[out, int32], len ptr[inout, bytesize[val, int32]])
setsockopt$KGPT_RXRPC_EXCLUSIVE_CONNECTION(fd sock_rxrpc, level const[SOL_RXRPC], opt const[RXRPC_EXCLUSIVE_CONNECTION], val ptr[in, int32], len len[val])
setsockopt$KGPT_RXRPC_MIN_SECURITY_LEVEL(fd sock_rxrpc, level const[SOL_RXRPC], opt const[RXRPC_MIN_SECURITY_LEVEL], val ptr[in, int32], len bytesize[val])
setsockopt$KGPT_RXRPC_UPGRADEABLE_SERVICE(fd sock_rxrpc, level const[SOL_RXRPC], opt const[RXRPC_UPGRADEABLE_SERVICE], val ptr[in, array[int16, 2]], len bytesize[val])
setsockopt$KGPT_RXRPC_SECURITY_KEY(fd sock_rxrpc, level const[SOL_RXRPC], opt const[RXRPC_SECURITY_KEY], val ptr[in, string], len len[val])
setsockopt$KGPT_RXRPC_SECURITY_KEYRING(fd sock_rxrpc, level const[SOL_RXRPC], opt const[RXRPC_SECURITY_KEYRING], val ptr[in, string], len len[val])
