meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/sctp.h>
include <samples/bpf/net_shared.h>
include <uapi/linux/in.h>

resource sock_inet_sctp[sock]

socket$KGPT_inet_sctp_dup(domain const[AF_INET], type const[SOCK_SEQPACKET], proto const[IPPROTO_SCTP]) sock_inet_sctp

bind$KGPT_sctp_prot(fd sock_inet_sctp, addr ptr[in, sctp_addr], addrlen len[addr])
accept4$KGPT_sctp_prot(fd sock_inet_sctp, peer ptr[out, sctp_addr, opt], peerlen ptr[inout, len[peer, int32]], flags flags[accept_flags]) sock_inet_sctp
sendto$KGPT_sctp_prot(fd sock_inet_sctp, buf ptr[in, array[int8]], len len[buf], f flags[send_flags], addr ptr[in, sctp_addr, opt], addrlen len[addr])
recvfrom$KGPT_sctp_prot(fd sock_inet_sctp, buf ptr[out, array[int8]], len len[buf], f flags[recv_flags], addr ptr[in, sctp_addr, opt], addrlen len[addr])
getsockopt$KGPT_SCTP_STATUS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_STATUS], val ptr[inout, sctp_status], len len[val])
getsockopt$KGPT_SCTP_DISABLE_FRAGMENTS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_DISABLE_FRAGMENTS], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_EVENTS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_EVENTS], val ptr[out, sctp_event_subscribe], len len[val])
getsockopt$KGPT_SCTP_AUTOCLOSE(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_AUTOCLOSE], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_SOCKOPT_PEELOFF(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_PEELOFF], val ptr[in, sctp_peeloff_arg_t], len len[val])
getsockopt$KGPT_SCTP_SOCKOPT_PEELOFF_FLAGS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_PEELOFF_FLAGS], val ptr[in, sctp_peeloff_flags_arg_t], len len[val])
getsockopt$KGPT_SCTP_PEER_ADDR_PARAMS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PEER_ADDR_PARAMS], val ptr[inout, sctp_paddrparams], len len[val])
getsockopt$KGPT_SCTP_DELAYED_SACK(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_DELAYED_SACK], val ptr[in, sctp_sack_info], len len[val])
getsockopt$KGPT_SCTP_INITMSG(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_INITMSG], val ptr[out, sctp_initmsg], len len[val])
getsockopt$KGPT_SCTP_GET_PEER_ADDRS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_GET_PEER_ADDRS], val ptr[inout, sctp_getaddrs], len len[val])
getsockopt$KGPT_SCTP_GET_LOCAL_ADDRS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_GET_LOCAL_ADDRS], val ptr[out, sctp_getaddrs], len len[val])
getsockopt$KGPT_SCTP_SOCKOPT_CONNECTX3(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_CONNECTX3], val ptr[in, sctp_getaddrs_old], len len[val])
getsockopt$KGPT_SCTP_DEFAULT_SEND_PARAM(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_DEFAULT_SEND_PARAM], val ptr[inout, sctp_sndrcvinfo], len len[val])
getsockopt$KGPT_SCTP_DEFAULT_SNDINFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_DEFAULT_SNDINFO], val ptr[in, sctp_sndinfo], len len[val])
getsockopt$KGPT_SCTP_PRIMARY_ADDR(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PRIMARY_ADDR], val ptr[inout, sctp_prim], len len[val])
getsockopt$KGPT_SCTP_NODELAY(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_NODELAY], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_RTOINFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_RTOINFO], val ptr[in, sctp_rtoinfo], len len[val])
getsockopt$KGPT_SCTP_ASSOCINFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_ASSOCINFO], val ptr[in, sctp_assocparams], len len[val])
getsockopt$KGPT_SCTP_I_WANT_MAPPED_V4_ADDR(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_I_WANT_MAPPED_V4_ADDR], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_MAXSEG(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_MAXSEG], val ptr[in, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_GET_PEER_ADDR_INFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_GET_PEER_ADDR_INFO], val ptr[inout, sctp_paddrinfo], len len[val])
getsockopt$KGPT_SCTP_ADAPTATION_LAYER(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_ADAPTATION_LAYER], val ptr[out, sctp_setadaptation], len len[val])
getsockopt$KGPT_SCTP_CONTEXT(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_CONTEXT], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_FRAGMENT_INTERLEAVE(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_FRAGMENT_INTERLEAVE], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_PARTIAL_DELIVERY_POINT(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PARTIAL_DELIVERY_POINT], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_MAX_BURST(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_MAX_BURST], val ptr[in, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_HMAC_IDENT(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_HMAC_IDENT], val ptr[out, sctp_hmacalgo], len len[val])
getsockopt$KGPT_SCTP_AUTH_ACTIVE_KEY(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_AUTH_ACTIVE_KEY], val ptr[inout, sctp_authkeyid], len len[val])
getsockopt$KGPT_SCTP_PEER_AUTH_CHUNKS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PEER_AUTH_CHUNKS], val ptr[inout, sctp_authchunks], len len[val])
getsockopt$KGPT_SCTP_LOCAL_AUTH_CHUNKS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_LOCAL_AUTH_CHUNKS], val ptr[in, sctp_authchunks], len len[val])
getsockopt$KGPT_SCTP_GET_ASSOC_NUMBER(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_GET_ASSOC_NUMBER], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_GET_ASSOC_ID_LIST(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_GET_ASSOC_ID_LIST], val ptr[out, sctp_assoc_ids], len len[val])
getsockopt$KGPT_SCTP_AUTO_ASCONF(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_AUTO_ASCONF], val ptr[in, int32], len len[val])
getsockopt$KGPT_SCTP_PEER_ADDR_THLDS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PEER_ADDR_THLDS], val ptr[inout, sctp_paddrthlds_v2], len len[val])
getsockopt$KGPT_SCTP_PEER_ADDR_THLDS_V2(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PEER_ADDR_THLDS_V2], val ptr[in, sctp_paddrthlds_v2], len len[val])
getsockopt$KGPT_SCTP_GET_ASSOC_STATS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_GET_ASSOC_STATS], val ptr[inout, sctp_assoc_stats], len len[val])
getsockopt$KGPT_SCTP_RECVRCVINFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_RECVRCVINFO], val ptr[in, int32], len len[val])
getsockopt$KGPT_SCTP_RECVNXTINFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_RECVNXTINFO], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_PR_SUPPORTED(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PR_SUPPORTED], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_DEFAULT_PRINFO(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_DEFAULT_PRINFO], val ptr[inout, sctp_default_prinfo], len len[val])
getsockopt$KGPT_SCTP_PR_ASSOC_STATUS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PR_ASSOC_STATUS], val ptr[in, sctp_prstatus], len len[val])
getsockopt$KGPT_SCTP_PR_STREAM_STATUS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PR_STREAM_STATUS], val ptr[inout, sctp_prstatus], len len[val])
getsockopt$KGPT_SCTP_RECONFIG_SUPPORTED(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_RECONFIG_SUPPORTED], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_ENABLE_STREAM_RESET(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_ENABLE_STREAM_RESET], val ptr[in, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_STREAM_SCHEDULER(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_STREAM_SCHEDULER], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_STREAM_SCHEDULER_VALUE(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_STREAM_SCHEDULER_VALUE], val ptr[inout, sctp_stream_value], len len[val])
getsockopt$KGPT_SCTP_INTERLEAVING_SUPPORTED(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_INTERLEAVING_SUPPORTED], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_REUSE_PORT(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_REUSE_PORT], val ptr[out, int32], len len[val])
getsockopt$KGPT_SCTP_EVENT(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_EVENT], val ptr[inout, sctp_event_subscribe], len len[val])
getsockopt$KGPT_SCTP_ASCONF_SUPPORTED(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_ASCONF_SUPPORTED], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_AUTH_SUPPORTED(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_AUTH_SUPPORTED], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_ECN_SUPPORTED(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_ECN_SUPPORTED], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_EXPOSE_POTENTIALLY_FAILED_STATE(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_EXPOSE_POTENTIALLY_FAILED_STATE], val ptr[inout, sctp_assoc_value], len len[val])
getsockopt$KGPT_SCTP_REMOTE_UDP_ENCAPS_PORT(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_REMOTE_UDP_ENCAPS_PORT], val ptr[in, sctp_udpencaps], len len[val])
getsockopt$KGPT_SCTP_PLPMTUD_PROBE_INTERVAL(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_PLPMTUD_PROBE_INTERVAL], val ptr[in, sctp_probeinterval], len len[val])
setsockopt$KGPT_SCTP_DISABLE_FRAGMENTS(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_DISABLE_FRAGMENTS], val ptr[in, int32], len bytesize[val])
setsockopt$KGPT_SCTP_SOCKOPT_BINDX_ADD(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_BINDX_ADD], val ptr[in, array[sockaddr_storage]], len len[val])
setsockopt$KGPT_SCTP_SOCKOPT_BINDX_REM(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_BINDX_REM], val ptr[in, array[sockaddr_storage]], len len[val])
setsockopt$KGPT_SCTP_SOCKOPT_CONNECTX_OLD(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_CONNECTX_OLD], val ptr[in, array[sockaddr_storage]], len len[val])
setsockopt$KGPT_SCTP_SOCKOPT_CONNECTX(fd sock_inet_sctp, level const[SOL_SCTP], opt const[SCTP_SOCKOPT_CONNECTX], val ptr[in, array[sockaddr_storage]], len len[val])

sctp_addr [
	v4	sockaddr_in
	v6	sockaddr_in6
	sa	sockaddr
]

sctp_peeloff_flags_arg_t {
	p_arg	sctp_peeloff_arg_t
	flags	int32
}

sctp_paddrthlds_v2 {
	spt_assoc_id	sctp_assoc_t
	spt_address	sockaddr_storage
	spt_pathmaxrxt	int16
	spt_pathpfthld	int16
	spt_pathcpthld	int16
}

sctp_udpencaps {
	sue_assoc_id	sctp_assoc_t
	sue_address	sockaddr_storage
	sue_port	int16
}

sctp_probeinterval {
	spi_assoc_id	sctp_assoc_t
	spi_address	sockaddr_storage
	spi_interval	int32
}

type sctp_assoc_t ptr[in, array[int8]]
