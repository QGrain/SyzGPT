meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/smc.h>
include <uapi/linux/tcp.h>

resource sock_smc[sock]

socket$KGPT_smc(domain const[AF_SMC], type const[SOCK_STREAM], proto const[0]) sock_smc

bind$KGPT_smc_sock_ops(fd sock_smc, addr ptr[in, sockaddr_in], addrlen len[addr])
connect$KGPT_smc_sock_ops(fd sock_smc, addr ptr[in, sockaddr_in], addrlen len[addr])
accept4$KGPT_smc_sock_ops(fd sock_smc, peer ptr[out, sockaddr_in, opt], peerlen ptr[inout, len[peer, int32]], flags flags[accept_flags]) sock_smc
sendto$KGPT_smc_sock_ops(fd sock_smc, buf ptr[in, array[int8]], len len[buf], f flags[send_flags], addr ptr[in, sockaddr_in, opt], addrlen len[addr])
recvfrom$KGPT_smc_sock_ops(fd sock_smc, buf ptr[out, array[int8]], len len[buf], f flags[recv_flags], addr ptr[in, sockaddr_in, opt], addrlen len[addr])
getsockopt$KGPT_SMC_LIMIT_HS(fd sock_smc, level const[SOL_SMC], opt const[SMC_LIMIT_HS], val ptr[out, int32], len ptr[inout, bytesize[val, int32]])
setsockopt$KGPT_TCP_ULP(fd sock_smc, level const[SOL_TCP], opt const[TCP_ULP], val int32, len bytesize[val])
setsockopt$KGPT_TCP_FASTOPEN(fd sock_smc, level const[SOL_TCP], opt const[TCP_FASTOPEN], val int32, len bytesize[val])
setsockopt$KGPT_TCP_FASTOPEN_CONNECT(fd sock_smc, level const[SOL_TCP], opt const[TCP_FASTOPEN_CONNECT], val int32, len bytesize[val])
setsockopt$KGPT_TCP_FASTOPEN_KEY(fd sock_smc, level const[SOL_TCP], opt const[TCP_FASTOPEN_KEY], val int32, len bytesize[val])
setsockopt$KGPT_TCP_FASTOPEN_NO_COOKIE(fd sock_smc, level const[SOL_TCP], opt const[TCP_FASTOPEN_NO_COOKIE], val int32, len bytesize[val])
setsockopt$KGPT_TCP_NODELAY(fd sock_smc, level const[SOL_TCP], opt const[TCP_NODELAY], val int32, len bytesize[val])
setsockopt$KGPT_TCP_CORK(fd sock_smc, level const[SOL_TCP], opt const[TCP_CORK], val int32, len bytesize[val])
setsockopt$KGPT_TCP_DEFER_ACCEPT(fd sock_smc, level const[SOL_TCP], opt const[TCP_DEFER_ACCEPT], val int32, len bytesize[val])
setsockopt$KGPT_SMC_LIMIT_HS(fd sock_smc, level const[SOL_SMC], opt const[SMC_LIMIT_HS], val ptr[in, int32], len bytesize[val])
