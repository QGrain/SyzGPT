meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <sound/pcm.h>

resource fd_hdsp_pcm_capture[fd]

syz_open_dev$KGPT_sndpcm(dev ptr[in, string["/dev/snd/pcmC#D0c"]], id proc[0, 1], flags flags[open_flags]) fd_hdsp_pcm_capture

ioctl$KGPT_SNDRV_PCM_IOCTL1_RESET_0(fd fd_hdsp_pcm_capture, cmd const[SNDRV_PCM_IOCTL1_RESET], arg ptr[in, array[int8]])
ioctl$KGPT_SNDRV_PCM_IOCTL1_CHANNEL_INFO_0(fd fd_hdsp_pcm_capture, cmd const[SNDRV_PCM_IOCTL1_CHANNEL_INFO], arg ptr[inout, snd_pcm_channel_info])
ioctl$KGPT_SNDRV_PCM_IOCTL1_FIFO_SIZE_0(fd fd_hdsp_pcm_capture, cmd const[SNDRV_PCM_IOCTL1_FIFO_SIZE], arg ptr[inout, snd_pcm_hw_params])
