meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/fcntl.h>
include <uapi/mtd/ubi-user.h>
include <uapi/asm-generic/fcntl.h>

resource fd_ubi_ctrl[fd]

openat$KGPT_ubi_ctrl(fd const[AT_FDCWD], file ptr[in, string["/dev/ubi_ctrl"]], flags const[O_RDWR], mode const[0]) fd_ubi_ctrl

ioctl$KGPT_UBI_IOCATT(fd fd_ubi_ctrl, cmd const[UBI_IOCATT], arg ptr[in, ubi_attach_req])
ioctl$KGPT_UBI_IOCDET(fd fd_ubi_ctrl, cmd const[UBI_IOCDET], arg intptr)

ubi_attach_req {
	ubi_num		int32
	mtd_num		int32
	vid_hdr_offset	int32
	max_beb_per1024	int16
	disable_fm	int8
	need_resv_pool	int8
	padding		array[int8, 8]
}
