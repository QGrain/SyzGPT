meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/mtd/ubi-user.h>

resource fd_ubi_vol[fd]

syz_open_dev$KGPT_ubi_dup(dev ptr[in, string["/dev/ubi#_#"]], id proc[0, 1], vol_id proc[0, 1], flags flags[open_flags]) fd_ubi_vol

ioctl$KGPT_UBI_IOCVOLCRBLK(fd fd_ubi_vol, cmd const[UBI_IOCVOLCRBLK], arg ptr[in, array[int8]])
ioctl$KGPT_UBI_IOCVOLRMBLK(fd fd_ubi_vol, cmd const[UBI_IOCVOLRMBLK], arg ptr[in, array[int8]])
ioctl$KGPT_UBI_IOCVOLUP(fd fd_ubi_vol, cmd const[UBI_IOCVOLUP], arg ptr[in, int64])
ioctl$KGPT_UBI_IOCEBCH(fd fd_ubi_vol, cmd const[UBI_IOCEBCH], arg ptr[in, ubi_leb_change_req])
ioctl$KGPT_UBI_IOCEBER(fd fd_ubi_vol, cmd const[UBI_IOCEBER], arg intptr)
ioctl$KGPT_UBI_IOCEBMAP(fd fd_ubi_vol, cmd const[UBI_IOCEBMAP], arg ptr[in, ubi_map_req])
ioctl$KGPT_UBI_IOCEBUNMAP(fd fd_ubi_vol, cmd const[UBI_IOCEBUNMAP], arg ptr[in, int32])
ioctl$KGPT_UBI_IOCEBISMAP(fd fd_ubi_vol, cmd const[UBI_IOCEBISMAP], arg ptr[in, int32])
ioctl$KGPT_UBI_IOCSETVOLPROP(fd fd_ubi_vol, cmd const[UBI_IOCSETVOLPROP], arg ptr[in, ubi_set_vol_prop_req])

ubi_leb_change_req {
	lnum	int32
	bytes	int32
	dtype	int8
	padding	array[int8, 7]
}

ubi_map_req {
	lnum	int32
	dtype	int8
	padding	array[int8, 3]
}

ubi_set_vol_prop_req {
	property	int8
	padding		array[int8, 7]
	value		int64
}
