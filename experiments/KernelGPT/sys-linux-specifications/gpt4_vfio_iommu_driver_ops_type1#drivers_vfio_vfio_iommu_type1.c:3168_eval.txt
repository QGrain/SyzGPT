meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/fcntl.h>
include <uapi/linux/vfio.h>
include <uapi/asm-generic/fcntl.h>

openat$KGPT_vfio(fd const[AT_FDCWD], file ptr[in, string["/dev/vfio/vfio"]], flags const[O_RDWR], mode const[0]) fd_vfio

ioctl$KGPT_VFIO_IOMMU_DIRTY_PAGES(fd fd_vfio, cmd const[VFIO_IOMMU_DIRTY_PAGES], arg ptr[in, vfio_iommu_type1_dirty_bitmap])

vfio_iommu_type1_dirty_bitmap {
	argsz	int32
	flags	flags[vfio_iommu_dirty_pages_flags, int32]
	data	array[int8]
}

vfio_iommu_dirty_pages_flags = VFIO_IOMMU_DIRTY_PAGES_FLAG_START, VFIO_IOMMU_DIRTY_PAGES_FLAG_STOP, VFIO_IOMMU_DIRTY_PAGES_FLAG_GET_BITMAP
define VFIO_IOMMU_DIRTY_PAGES_FLAG_START	(1<<0)
define VFIO_IOMMU_DIRTY_PAGES_FLAG_STOP	(1<<1)
define VFIO_IOMMU_DIRTY_PAGES_FLAG_GET_BITMAP	(1<<2)
