meta arches["amd64"]

include <asm/fcntl.h>
include <asm/ioctl.h>
include <asm/ioctls.h>
include <linux/elf.h>
include <linux/errno.h>
include <linux/eventfd.h>
include <linux/eventpoll.h>
include <linux/fcntl.h>
include <linux/filelock.h>
include <linux/fs.h>
include <linux/futex.h>
include <linux/ioctl.h>
include <linux/loop.h>
include <linux/mount.h>
include <linux/mutex.h>
include <linux/net.h>
include <linux/socket.h>
include <linux/stat.h>
include <linux/time.h>
include <linux/types.h>
include <linux/user.h>
include <linux/uuid.h>
include <uapi/asm/ioctl.h>
include <uapi/asm/ioctls.h>
include <uapi/linux/elf.h>
include <uapi/linux/fs.h>
include <uapi/linux/if_ether.h>
include <uapi/linux/ioctl.h>
include <uapi/linux/module.h>
include <uapi/linux/mount.h>
include <uapi/linux/videodev2.h>
include <uapi/linux/fcntl.h>
include <uapi/asm-generic/fcntl.h>
include <uapi/linux/vhost.h>

resource fd_vhost_net[fd]

openat$KGPT_net(fd const[AT_FDCWD], file ptr[in, string["/dev/vhost-net"]], flags const[O_RDWR], mode const[0]) fd_vhost_net

ioctl$KGPT_VHOST_GET_BACKEND_FEATURES(fd fd_vhost_net, cmd const[VHOST_GET_BACKEND_FEATURES], arg ptr[out, int64])
ioctl$KGPT_VHOST_SET_BACKEND_FEATURES(fd fd_vhost_net, cmd const[VHOST_SET_BACKEND_FEATURES], arg ptr[in, int64])
ioctl$KGPT_VHOST_GET_VRING_BUSYLOOP_TIMEOUT(fd fd_vhost_net, cmd const[VHOST_GET_VRING_BUSYLOOP_TIMEOUT], arg ptr[out, vhost_vring_state])
